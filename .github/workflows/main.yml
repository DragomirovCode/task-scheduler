name: Build, Push Docker Images, and Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Сборка и публикация образов для всех сервисов
      - name: Build Docker image for Backend
        working-directory: ./task-schedule-backend  # Директория с Dockerfile для backend
        run: |
          mvn clean package -DskipTests
          docker build -t dragomirovcode/task-schedule-backend:latest .
          docker push dragomirovcode/task-schedule-backend:latest

      - name: Build Docker image for Email Sender
        working-directory: ./task-schedule-email-sender  # Директория с Dockerfile для email sender
        run: |
          mvn clean package -DskipTests
          docker build -t dragomirovcode/task-schedule-email-sender:latest .
          docker push dragomirovcode/task-schedule-email-sender:latest

      - name: Build Docker image for Frontend
        working-directory: ./task-schedule-front  # Директория с Dockerfile для frontend
        run: |
          mvn clean package -DskipTests
          docker build -t dragomirovcode/task-schedule-front:latest .
          docker push dragomirovcode/task-schedule-front:latest

      - name: Build Docker image for Scheduler
        working-directory: ./task-scheduler  # Директория с Dockerfile для scheduler
        run: |
          mvn clean package -DskipTests
          docker build -t dragomirovcode/task-scheduler:latest .
          docker push dragomirovcode/task-scheduler:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Зависит от завершения job build
    steps:
      - name: Deploy to remote server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: 194.87.26.206
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # Обновляем систему
            sudo apt-get update -y && sudo apt-get upgrade -y

            # Установка Docker (если не установлен)
            if ! [ -x "$(command -v docker)" ]; then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sh get-docker.sh
            fi

            # Установка Docker Compose (если не установлен)
            if ! [ -x "$(command -v docker-compose)" ]; then
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
            fi

            # Загрузка вашего docker-compose.yml из GitHub
            curl -L -o ~/docker-compose.yml https://raw.githubusercontent.com/DragomirovCode/task-scheduler/main/docker-compose.yml

            # Переход в директорию, где будет лежать docker-compose.yml
            cd ~;  # или cd ~/task-scheduler, если нужно

            # Останавливаем предыдущие контейнеры
            docker-compose -f docker-compose.yml down;

            # Очищаем систему Docker
            docker system prune -a --force;

            # Подтягиваем образы и запускаем контейнеры
            docker-compose -f docker-compose.yml up -d;
