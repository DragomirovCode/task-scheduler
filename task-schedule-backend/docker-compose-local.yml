version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: my-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ~/data/redis:/var/lib/redis
      - ~/data/redis/config:/usr/local/etc/redis/redis.conf
    networks:
      webapp:
        aliases:
          - my-redis
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: mysql:latest
    container_name: my-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: my_mysql_username
      MYSQL_PASSWORD: my_mysql_password
      MYSQL_DATABASE: database
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      webapp:
        aliases:
          - my-mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 10s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: my-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      webapp:
        aliases:
          - my-zookeeper

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: my-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      webapp:
        aliases:
          - my-kafka

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  webapp:
    driver: bridge
    name: webapp
